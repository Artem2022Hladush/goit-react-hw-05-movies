{"version":3,"file":"static/js/387.9681a070.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,GAAAA,GAAH,gGAOJC,EAAWD,EAAAA,GAAAA,GAAH,6IAQRE,EAAQF,EAAAA,GAAAA,IAAH,yDAKLG,EAAUH,EAAAA,GAAAA,IAAH,yCAIPI,EAAOJ,EAAAA,GAAAA,EAAH,0GAOJK,EAAYL,EAAAA,GAAAA,EAAH,yC,SC0BtB,EArDa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEOC,EAAAA,EAAAA,IAAaJ,GAFpB,OAETK,EAFS,OAITC,EAAiBD,EAAQT,KAAKW,KAClC,YACE,MAAO,CAAEC,GADgC,EAAxCA,GACYC,KAD4B,EAApCA,KACcC,UADsB,EAA9BA,UACmBC,aADW,EAAnBA,aAEvB,IAEHd,EAAQS,GATO,gDAWfP,EAAS,wBAXM,yDAAH,qDAehBI,GACD,GAAE,CAACH,KAGF,gCACGF,GAAS,QACTF,GACC,SAACR,EAAD,UACGQ,EAAKW,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,aAAcF,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,UAACpB,EAAD,YACE,SAACC,EAAD,CACEqB,IAAKD,EACLE,IAAKJ,KAEP,UAACjB,EAAD,YACE,SAACC,EAAD,UAAOgB,KACP,UAACf,EAAD,YACE,sCADF,IACqBgB,UARVF,EAalB,OAGH,gFAIP,C,+LCvDKM,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAc,CACnBC,OAAQ,CACPC,SAAU,UAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACAC,EADA,qCACyCN,GADzC,SAEeC,EAAAA,EAAAA,IAAUK,GAFzB,uBAECC,EAFD,EAECA,KAFD,kBAGCA,GAHD,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACAC,EADA,+BACoCV,EADpC,kBACiDS,GADjD,SAEiBR,EAAAA,EAAAA,IAAUS,EAAWR,GAFtC,uBAEEK,EAFF,EAEEA,KAFF,kBAGCA,GAHD,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,kFACA0B,EADA,gBACqB1B,EADrB,oBACwCc,GADxC,SAEeC,EAAAA,EAAAA,IAAUW,EAAWV,GAFpC,uBAECK,EAFD,EAECA,KAFD,kBAGCA,GAHD,kEAMA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,kFACA2B,EADA,gBACsB3B,EADtB,4BACiDc,GADjD,SAEeC,EAAAA,EAAAA,IAAUY,EAAYX,GAFrC,uBAECK,EAFD,EAECA,KAFD,kBAGCA,GAHD,kEAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4B5B,GAA5B,kFACA6B,EADA,iBACuB7B,EADvB,oBAC0Cc,GAD1C,SAEeC,EAAAA,EAAAA,IAAUc,EAAYb,GAFrC,uBAECK,EAFD,EAECA,KAFD,kBAGCA,GAHD,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/apiFetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  align-items: center;\n  justify-content: center;\n  flex-basis: 100%;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 5px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 5px;\n  font-size: 24px;\n  font-weight: Bold;\n  color: white;\n`;\n\nexport const Character = styled.p`\n  color: black;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { creditsMovie } from 'service/apiFetch';\nimport { Character, Image, List, ListItem, Name, Wrapper } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        const details = await creditsMovie(movieId);\n\n        const fetchedDetails = details.cast.map(\n          ({ id, name, character, profile_path }) => {\n            return { id, name, character, profile_path };\n          }\n        );\n        setCast(fetchedDetails);\n      } catch {\n        setError('Something went wrong');\n      }\n    };\n\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && \"Error\"}\n      {cast ? (\n        <List>\n          {cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <ListItem key={id}>\n                <Image\n                  src={profile_path}\n                  alt={name}\n                />\n                <Wrapper>\n                  <Name>{name}</Name>\n                  <Character>\n                    <b>Character:</b> {character}\n                  </Character>\n                </Wrapper>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <p>We don`t have the cast information for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst KEY = 'ee94c28793e897f5ab3e42b6b141640f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst axiosParams = {\n\tparams: {\n\t\tlanguage: 'en-US',\n\t},\n};\n\nexport async function getTrendinMovies()  {\n\tconst trendUrl = `trending/movie/day?api_key=${KEY}`;\n\tconst {data} = await axios.get(trendUrl);\n\treturn data;\n};\n\nexport async function searchMovie(value) {\n\tconst searchUrl = `search/movie?api_key=${KEY}&query=${value}`;\n\tconst { data } = await axios.get(searchUrl, axiosParams);\n\treturn data;\n};\n\nexport async function movieDeteils(movieId) {\n\tconst deteilUrl = `movie/${movieId}?api_key=${KEY}`;\n\tconst {data} = await axios.get(deteilUrl, axiosParams)\n\treturn data;\n};\n\nexport async function creditsMovie(movieId) {\n\tconst creditsUrl = `movie/${movieId}/credits?api_key=${KEY}`;\n\tconst {data} = await axios.get(creditsUrl, axiosParams);\n\treturn data;\n}\n\nexport async function reviewsMovie(movieId) {\n\tconst reviewsUrl = `review/${movieId}?api_key=${KEY}`;\n\tconst {data} = await axios.get(reviewsUrl, axiosParams);\n\treturn data;\n}\n"],"names":["List","styled","ListItem","Image","Wrapper","Name","Character","useState","cast","setCast","error","setError","movieId","useParams","useEffect","getDetails","creditsMovie","details","fetchedDetails","map","id","name","character","profile_path","src","alt","KEY","axios","axiosParams","params","language","getTrendinMovies","trendUrl","data","searchMovie","value","searchUrl","movieDeteils","deteilUrl","creditsUrl","reviewsMovie","reviewsUrl"],"sourceRoot":""}