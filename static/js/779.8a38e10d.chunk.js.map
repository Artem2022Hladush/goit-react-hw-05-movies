{"version":3,"file":"static/js/779.8a38e10d.chunk.js","mappings":"8QAEaA,EAAOC,EAAAA,GAAAA,GAAH,uGAOJC,EAAWD,EAAAA,GAAAA,GAAH,4GAORE,EAAkBF,EAAAA,GAAAA,EAAH,gJ,SCqC5B,EA/CgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEOC,EAAAA,EAAAA,IAAaJ,GAFpB,OAETJ,EAFS,OAITS,EAAgBT,EAAQU,QAAQC,KACpC,YACE,MAAO,CAAEC,GAD8B,EAAtCA,GACYC,OAD0B,EAAlCA,OACgBC,QADkB,EAA1BA,QACiBC,WADS,EAAjBA,WAEvB,IAEHd,EAAWQ,GATI,gDAWfN,EAAS,wBAXM,yDAAH,qDAchBI,GACD,GAAE,CAACH,KAGF,gCACGF,GAAS,SACV,SAACP,EAAD,UACGK,EAAQgB,OAAS,EAChBhB,EAAQW,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5BE,EAAO,IAAIC,KAAKH,GACtB,OACE,UAAClB,EAAD,YACE,UAACC,EAAD,YACE,mCADF,IACkBe,EADlB,KAC4BI,EAAKE,qBADjC,QAGA,uBAAIL,MAJSF,EAOlB,KAED,yEAKT,C,+LCjDKQ,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAc,CACnBC,OAAQ,CACPC,SAAU,UAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACAC,EADA,qCACyCN,GADzC,SAEeC,EAAAA,EAAAA,IAAUK,GAFzB,uBAECT,EAFD,EAECA,KAFD,kBAGCA,GAHD,kEAMA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACAC,EADA,+BACoCT,EADpC,kBACiDQ,GADjD,SAEiBP,EAAAA,EAAAA,IAAUQ,EAAWP,GAFtC,uBAEEL,EAFF,EAEEA,KAFF,kBAGCA,GAHD,kEAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,kFACA2B,EADA,gBACqB3B,EADrB,oBACwCgB,GADxC,SAEeC,EAAAA,EAAAA,IAAUU,EAAWT,GAFpC,uBAECL,EAFD,EAECA,KAFD,kBAGCA,GAHD,kEAMA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA4B5B,GAA5B,kFACA6B,EADA,gBACsB7B,EADtB,4BACiDgB,GADjD,SAEeC,EAAAA,EAAAA,IAAUY,EAAYX,GAFrC,uBAECL,EAFD,EAECA,KAFD,kBAGCA,GAHD,kEAMA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,kFACA8B,EADA,iBACuB9B,EADvB,oBAC0CgB,GAD1C,SAEeC,EAAAA,EAAAA,IAAUa,EAAYZ,GAFrC,uBAECL,EAFD,EAECA,KAFD,kBAGCA,GAHD,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/apiFetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 5px;\n  width: 100%;\n  background-color: white;\n  border-radius: 5px;\n`;\n\nexport const CommentatorName = styled.p`\n  margin-bottom: 5px;\n  padding: 10px 0;\n  font-size: 24px;\n  font-weight: Bold;\n  border-bottom: 1px solid black;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { reviewsMovie } from 'service/apiFetch';\nimport { CommentatorName, List, ListItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const reviews = await reviewsMovie(movieId);\n\n        const fetchedReview = reviews.results.map(\n          ({ id, author, content, created_at }) => {\n            return { id, author, content, created_at };\n          }\n        );\n        setReviews(fetchedReview);\n      } catch {\n        setError('Something went wrong');\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && \"Error\"}\n      <List>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content, created_at }) => {\n            const data = new Date(created_at);\n            return (\n              <ListItem key={id}>\n                <CommentatorName>\n                  <b>Author:</b> {author} ({data.toLocaleDateString()})\n                </CommentatorName>\n                <p>{content}</p>\n              </ListItem>\n            );\n          })\n        ) : (\n          <p>We don`t have any reviews for this movie.</p>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst KEY = 'ee94c28793e897f5ab3e42b6b141640f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst axiosParams = {\n\tparams: {\n\t\tlanguage: 'en-US',\n\t},\n};\n\nexport async function getTrendinMovies()  {\n\tconst trendUrl = `trending/movie/day?api_key=${KEY}`;\n\tconst {data} = await axios.get(trendUrl);\n\treturn data;\n};\n\nexport async function searchMovie(value) {\n\tconst searchUrl = `search/movie?api_key=${KEY}&query=${value}`;\n\tconst { data } = await axios.get(searchUrl, axiosParams);\n\treturn data;\n};\n\nexport async function movieDeteils(movieId) {\n\tconst deteilUrl = `movie/${movieId}?api_key=${KEY}`;\n\tconst {data} = await axios.get(deteilUrl, axiosParams)\n\treturn data;\n};\n\nexport async function creditsMovie(movieId) {\n\tconst creditsUrl = `movie/${movieId}/credits?api_key=${KEY}`;\n\tconst {data} = await axios.get(creditsUrl, axiosParams);\n\treturn data;\n}\n\nexport async function reviewsMovie(movieId) {\n\tconst reviewsUrl = `review/${movieId}?api_key=${KEY}`;\n\tconst {data} = await axios.get(reviewsUrl, axiosParams);\n\treturn data;\n}\n"],"names":["List","styled","ListItem","CommentatorName","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getReviews","reviewsMovie","fetchedReview","results","map","id","author","content","created_at","length","data","Date","toLocaleDateString","KEY","axios","axiosParams","params","language","getTrendinMovies","trendUrl","searchMovie","value","searchUrl","movieDeteils","deteilUrl","creditsMovie","creditsUrl","reviewsUrl"],"sourceRoot":""}